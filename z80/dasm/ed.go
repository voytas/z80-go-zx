package dasm

// Table containing extended instructions (ED prefix)
var edInstructions = []*instruction{
	0x40: {mnemonic: "IN   B,(C)", size: 2},
	0x41: {mnemonic: "OUT  (C),B", size: 2},
	0x42: {mnemonic: "SBC  HL,BC", size: 2},
	0x43: {mnemonic: "LD   ($1$2),BC", args: []int{3, 2}, size: 4},
	0x44: {mnemonic: "NEG", size: 2},
	0x45: {mnemonic: "RETN", size: 2},
	0x46: {mnemonic: "IM   0", size: 2},
	0x47: {mnemonic: "LD   I,A", size: 2},
	0x48: {mnemonic: "IN   C,(C)", size: 2},
	0x49: {mnemonic: "OUT  (C),C", size: 2},
	0x4A: {mnemonic: "ADC  HL,BC", size: 2},
	0x4B: {mnemonic: "LD   BC,($1$2)", args: []int{3, 2}, size: 4},
	0x4C: {mnemonic: "NEG", size: 2},
	0x4D: {mnemonic: "RETI", size: 2},
	0x4E: {mnemonic: "IM   0/1", size: 2},
	0x4F: {mnemonic: "LD   R,A", size: 2},
	0x50: {mnemonic: "IN   D,(C)", size: 2},
	0x51: {mnemonic: "OUT  (C),D", size: 2},
	0x52: {mnemonic: "SBC  HL,DE", size: 2},
	0x53: {mnemonic: "LD   ($1$2),DE", args: []int{3, 2}, size: 4},
	0x54: {mnemonic: "NEG", size: 2},
	0x55: {mnemonic: "RETN", size: 2},
	0x56: {mnemonic: "IM   1", size: 2},
	0x57: {mnemonic: "LD   A,I", size: 2},
	0x58: {mnemonic: "IN   E,(C)", size: 2},
	0x59: {mnemonic: "OUT  (C),E", size: 2},
	0x5A: {mnemonic: "ADC  HL,DE", size: 2},
	0x5B: {mnemonic: "LD   DE,($1$2)", args: []int{3, 2}, size: 4},
	0x5C: {mnemonic: "NEG", size: 2},
	0x5D: {mnemonic: "RETN", size: 2},
	0x5E: {mnemonic: "IM   2", size: 2},
	0x5F: {mnemonic: "LD   A,R", size: 2},
	0x60: {mnemonic: "IN   H,(C)", size: 2},
	0x61: {mnemonic: "OUT  (C),H", size: 2},
	0x62: {mnemonic: "SBC  HL,HL", size: 2},
	0x63: {mnemonic: "LD   ($1$2),HL", args: []int{3, 2}, size: 4},
	0x64: {mnemonic: "NEG", size: 2},
	0x65: {mnemonic: "RETN", size: 2},
	0x67: {mnemonic: "RRD", size: 2},
	0x68: {mnemonic: "IN   L,(C)", size: 2},
	0x69: {mnemonic: "OUT  (C),L", size: 2},
	0x6A: {mnemonic: "ADC  HL,HL", size: 2},
	0x6B: {mnemonic: "LD   HL,($1$2)", args: []int{3, 2}, size: 4},
	0x6C: {mnemonic: "NEG", size: 2},
	0x6D: {mnemonic: "RETN", size: 2},
	0x6E: {mnemonic: "IM   0/1", size: 2},
	0x6F: {mnemonic: "RLD", size: 2},
	0x70: {mnemonic: "IN   (C)", size: 2},
	0x71: {mnemonic: "OUT  (C),0", size: 2},
	0x72: {mnemonic: "SBC  HL,SP", size: 2},
	0x73: {mnemonic: "LD   ($1$2),SP", args: []int{3, 2}, size: 4},
	0x74: {mnemonic: "NEG", size: 2},
	0x75: {mnemonic: "RETN", size: 2},
	0x78: {mnemonic: "IN   A,(C)", size: 2},
	0x79: {mnemonic: "OUT  (C),A", size: 2},
	0x7A: {mnemonic: "ADC  HL,SP", size: 2},
	0x7B: {mnemonic: "LD   SP,($1$2)", args: []int{3, 2}, size: 4},
	0x7C: {mnemonic: "NEG", size: 2},
	0x7D: {mnemonic: "RETN", size: 2},
	0xA0: {mnemonic: "LDI", size: 2},
	0xA1: {mnemonic: "CPI", size: 2},
	0xA2: {mnemonic: "INI", size: 2},
	0xA3: {mnemonic: "OUTI", size: 2},
	0xA8: {mnemonic: "LDD", size: 2},
	0xA9: {mnemonic: "CPD", size: 2},
	0xAA: {mnemonic: "IND", size: 2},
	0xAB: {mnemonic: "OUTD", size: 2},
	0xB0: {mnemonic: "LDIR", size: 2},
	0xB1: {mnemonic: "CPIR", size: 2},
	0xB2: {mnemonic: "INIR", size: 2},
	0xB3: {mnemonic: "OTIR", size: 2},
	0xB8: {mnemonic: "LDDR", size: 2},
	0xB9: {mnemonic: "CPDR", size: 2},
	0xBA: {mnemonic: "INDR", size: 2},
	0xBB: {mnemonic: "OTDR", size: 2},
	0xFF: nil,
}
