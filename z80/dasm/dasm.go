package dasm

type decoded struct {
	code  string
	bytes []byte
}

func xxx(addr uint16, mem []byte) decoded {
	opcode := mem[addr]

	d := decoded{}
	switch opcode {
	case 0xCB:
		// CB opcode
	case 0xDD:
		// IX opcode
	case 0xED:
		// ED opcode
	case 0xFD:
		// FD opcode
	default:
		// primary opcode
	}

	return d
}

type opcode struct {
	mnemonic string
	args     int // number of bytes to op read arguments
	relative bool
}

// Table containing primary opcodes
var primaryOpcodes = []*opcode{
	0x00: {mnemonic: "NOP"},
	0x01: {mnemonic: "LD   BC,%s", args: 2},
	0x02: {mnemonic: "LD   (BC),A"},
	0x03: {mnemonic: "INC  BC"},
	0x04: {mnemonic: "INC  B"},
	0x05: {mnemonic: "DEC  B"},
	0x06: {mnemonic: "LD   B,%s", args: 1},
	0x07: {mnemonic: "RLCA"},
	0x08: {mnemonic: "EX   AF,AF'"},
	0x09: {mnemonic: "ADD  HL,BC"},
	0x0A: {mnemonic: "LD   A,(BC)"},
	0x0B: {mnemonic: "DEC  BC"},
	0x0C: {mnemonic: "INC  C"},
	0x0D: {mnemonic: "DEC  C"},
	0x0E: {mnemonic: "LD   C,%s", args: 1},
	0x0F: {mnemonic: "RRCA"},
	0x10: {mnemonic: "DJNZ %s", args: 1},
	0x11: {mnemonic: "LD   DE,%s", args: 2},
	0x12: {mnemonic: "LD   (DE),A"},
	0x13: {mnemonic: "INC  DE"},
	0x14: {mnemonic: "INC  D"},
	0x15: {mnemonic: "DEC  D"},
	0x16: {mnemonic: "LD   D,%s", args: 1},
	0x17: {mnemonic: "RLA"},
	0x18: {mnemonic: "JR   %s", args: 1},
	0x19: {mnemonic: "ADD  HL,DE"},
	0x1A: {mnemonic: "LD   A,(BC)"},
	0x1B: {mnemonic: "DEC  DE"},
	0x1C: {mnemonic: "INC  C"},
	0x1D: {mnemonic: "DEC  C"},
	0x1E: {mnemonic: "LD   C,%s"},
	0x1F: {mnemonic: "RRA"},
	0x20: {mnemonic: "JR NZ,%s", args: 1},
	0x21: {mnemonic: "LD   HL,%s", args: 2},
	0x22: {mnemonic: "LD   (%s),HL", args: 2},
	0x23: {mnemonic: "INC  HL"},
	0x24: {mnemonic: "INC  H"},
	0x25: {mnemonic: "DEC  H"},
	0x26: {mnemonic: "LD   H,%s", args: 1},
	0x27: {mnemonic: "DAA"},
	0x28: {mnemonic: "JR   Z,%s", args: 1},
	0x29: {mnemonic: "ADD  HL,HL"},
	0x2A: {mnemonic: "LD   HL,(%s)", args: 2},
	0x2B: {mnemonic: "DEC  HL"},
	0x2C: {mnemonic: "INC  L"},
	0x2D: {mnemonic: "DEC  L"},
	0x2E: {mnemonic: "LD   L,%s", args: 1},
	0x2F: {mnemonic: "CPL"},
	0x30: {mnemonic: "JR   NC,%s", args: 1},
	0x31: {mnemonic: "LD   SP,%s", args: 2},
	0x32: {mnemonic: "LD   (%s),A", args: 2},
	0x33: {mnemonic: "INC  SP"},
	0x34: {mnemonic: "INC  (HL)"},
	0x35: {mnemonic: "DEC  (HL)"},
	0x36: {mnemonic: "LD   (HL),%s", args: 1},
	0x37: {mnemonic: "SCF"},
	0x38: {mnemonic: "JR   C,%s", args: 1},
	0x39: {mnemonic: "ADD  HL,SP"},
	0x3A: {mnemonic: "LD   A,(%s)", args: 2},
	0x3B: {mnemonic: "DEC  SP"},
	0x3C: {mnemonic: "INC  A"},
	0x3D: {mnemonic: "DEC  A"},
	0x3E: {mnemonic: "LD   A,%s", args: 1},
	0x3F: {mnemonic: "CCF"},
	0x40: {mnemonic: "LD   B,B"},
	0x41: {mnemonic: "LD   B,C"},
	0x42: {mnemonic: "LD   B,D"},
	0x43: {mnemonic: "LD   B,E"},
	0x44: {mnemonic: "LD   B,H"},
	0x45: {mnemonic: "LD   B,L"},
	0x46: {mnemonic: "LD   B,(HL)"},
	0x47: {mnemonic: "LD   B,A"},
	0x48: {mnemonic: "LD   C,B"},
	0x49: {mnemonic: "LD   C,C"},
	0x4A: {mnemonic: "LD   C,D"},
	0x4B: {mnemonic: "LD   C,E"},
	0x4C: {mnemonic: "LD   C,H"},
	0x4D: {mnemonic: "LD   C,L"},
	0x4E: {mnemonic: "LD   C,(HL)"},
	0x4F: {mnemonic: "LD   C,A"},
	0x50: {mnemonic: "LD   D,B"},
	0x51: {mnemonic: "LD   D,C"},
	0x52: {mnemonic: "LD   D,D"},
	0x53: {mnemonic: "LD   D,E"},
	0x54: {mnemonic: "LD   D,H"},
	0x55: {mnemonic: "LD   D,L"},
	0x56: {mnemonic: "LD   D,(HL)"},
	0x57: {mnemonic: "LD   D,A"},
	0x58: {mnemonic: "LD   E,B"},
	0x59: {mnemonic: "LD   E,C"},
	0x5A: {mnemonic: "LD   E,D"},
	0x5B: {mnemonic: "LD   E,E"},
	0x5C: {mnemonic: "LD   E,H"},
	0x5D: {mnemonic: "LD   E,L"},
	0x5E: {mnemonic: "LD   E,(HL)"},
	0x5F: {mnemonic: "LD   E,A"},
	0x60: {mnemonic: "LD   H,B"},
	0x61: {mnemonic: "LD   H,C"},
	0x62: {mnemonic: "LD   H,D"},
	0x63: {mnemonic: "LD   H,E"},
	0x64: {mnemonic: "LD   H,H"},
	0x65: {mnemonic: "LD   H,L"},
	0x66: {mnemonic: "LD   H,(HL)"},
	0x67: {mnemonic: "LD   H,A"},
	0x68: {mnemonic: "LD   L,B"},
	0x69: {mnemonic: "LD   L,C"},
	0x6A: {mnemonic: "LD   L,D"},
	0x6B: {mnemonic: "LD   L,E"},
	0x6C: {mnemonic: "LD   L,H"},
	0x6D: {mnemonic: "LD   L,L"},
	0x6E: {mnemonic: "LD   L,(HL)"},
	0x6F: {mnemonic: "LD   L,A"},
	0x70: {mnemonic: "LD   (HL),B"},
	0x71: {mnemonic: "LD   (HL),C"},
	0x72: {mnemonic: "LD   (HL),D"},
	0x73: {mnemonic: "LD   (HL),E"},
	0x74: {mnemonic: "LD   (HL),H"},
	0x75: {mnemonic: "LD   (HL),L"},
	0x76: {mnemonic: "HALT"},
	0x77: {mnemonic: "LD   (HL),A"},
	0x78: {mnemonic: "LD   A,B"},
	0x79: {mnemonic: "LD   A,C"},
	0x7A: {mnemonic: "LD   A,D"},
	0x7B: {mnemonic: "LD   A,E"},
	0x7C: {mnemonic: "LD   A,H"},
	0x7D: {mnemonic: "LD   A,L"},
	0x7E: {mnemonic: "LD   A,(HL)"},
	0x7F: {mnemonic: "LD   A,A"},
	0x80: {mnemonic: "ADD  A,B"},
	0x81: {mnemonic: "ADD  A,C"},
	0x82: {mnemonic: "ADD  A,D"},
	0x83: {mnemonic: "ADD  A,E"},
	0x84: {mnemonic: "ADD  A,H"},
	0x85: {mnemonic: "ADD  A,L"},
	0x86: {mnemonic: "ADD  A,(HL)"},
	0x87: {mnemonic: "ADD  A,A"},
	0x88: {mnemonic: "ADC  A,B"},
	0x89: {mnemonic: "ADC  A,C"},
	0x8A: {mnemonic: "ADC  A,D"},
	0x8B: {mnemonic: "ADC  A,E"},
	0x8C: {mnemonic: "ADC  A,H"},
	0x8D: {mnemonic: "ADC  A,L"},
	0x8E: {mnemonic: "ADC  A,(HL)"},
	0x8F: {mnemonic: "ADC  A,A"},
	0x90: {mnemonic: "SUB  B"},
	0x91: {mnemonic: "SUB  C"},
	0x92: {mnemonic: "SUB  D"},
	0x93: {mnemonic: "SUB  E"},
	0x94: {mnemonic: "SUB  H"},
	0x95: {mnemonic: "SUB  L"},
	0x96: {mnemonic: "SUB  (HL)"},
	0x97: {mnemonic: "SUB  A"},
	0x98: {mnemonic: "SBC  A,B"},
	0x99: {mnemonic: "SBC  A,C"},
	0x9A: {mnemonic: "SBC  A,D"},
	0x9B: {mnemonic: "SBC  A,E"},
	0x9C: {mnemonic: "SBC  A,H"},
	0x9D: {mnemonic: "SBC  A,L"},
	0x9E: {mnemonic: "SBC  A,(HL)"},
	0x9F: {mnemonic: "SBC  A,A"},
	0xA0: {mnemonic: "AND  B"},
	0xA1: {mnemonic: "AND  C"},
	0xA2: {mnemonic: "AND  D"},
	0xA3: {mnemonic: "AND  E"},
	0xA4: {mnemonic: "AND  H"},
	0xA5: {mnemonic: "AND  L"},
	0xA6: {mnemonic: "AND  (HL)"},
	0xA7: {mnemonic: "AND  A"},
	0xA8: {mnemonic: "XOR  B"},
	0xA9: {mnemonic: "XOR  C"},
	0xAA: {mnemonic: "XOR  D"},
	0xAB: {mnemonic: "XOR  E"},
	0xAC: {mnemonic: "XOR  H"},
	0xAD: {mnemonic: "XOR  L"},
	0xAE: {mnemonic: "XOR  (HL)"},
	0xAF: {mnemonic: "XOR  A"},
	0xB0: {mnemonic: "OR   B"},
	0xB1: {mnemonic: "OR   C"},
	0xB2: {mnemonic: "OR   D"},
	0xB3: {mnemonic: "OR   E"},
	0xB4: {mnemonic: "OR   H"},
	0xB5: {mnemonic: "OR   L"},
	0xB6: {mnemonic: "OR   (HL)"},
	0xB7: {mnemonic: "OR   A"},
	0xB8: {mnemonic: "CP   B"},
	0xB9: {mnemonic: "CP   C"},
	0xBA: {mnemonic: "CP   D"},
	0xBB: {mnemonic: "CP   E"},
	0xBC: {mnemonic: "CP   H"},
	0xBD: {mnemonic: "CP   L"},
	0xBE: {mnemonic: "CP   (HL)"},
	0xBF: {mnemonic: "CP   A"},
	0xC0: {mnemonic: "RET  NZ"},
	0xC1: {mnemonic: "POP  BC"},
	0xC2: {mnemonic: "JP   NZ,%s", args: 2},
	0xC3: {mnemonic: "JP   %s", args: 2},
	0xC4: {mnemonic: "CALL NZ,%s", args: 2},
	0xC5: {mnemonic: "PUSH BC"},
	0xC6: {mnemonic: "ADD  A,%s", args: 1},
	0xC7: {mnemonic: "RST  0h"},
	0xC8: {mnemonic: "RET  Z"},
	0xC9: {mnemonic: "RET"},
	0xCA: {mnemonic: "JP   Z,%s", args: 2},
	0xCC: {mnemonic: "CALL Z,%s", args: 2},
	0xCD: {mnemonic: "CALL %s", args: 2},
	0xCE: {mnemonic: "ADC  A,%s", args: 1},
	0xCF: {mnemonic: "RST  08h"},
	0xD0: {mnemonic: "RET  NC"},
	0xD1: {mnemonic: "POP  DE"},
	0xD2: {mnemonic: "JP   NC,%s", args: 2},
	0xD3: {mnemonic: "OUT  (%s),A", args: 1},
	0xD4: {mnemonic: "CALL NC,%s", args: 2},
	0xD5: {mnemonic: "PUSH DE"},
	0xD6: {mnemonic: "SUB  %s", args: 1},
	0xD7: {mnemonic: "RST  10h"},
	0xD8: {mnemonic: "RET  C"},
	0xD9: {mnemonic: "EXX"},
	0xDA: {mnemonic: "JP   C,%s", args: 2},
	0xDB: {mnemonic: "IN   A,(%s)", args: 1},
	0xDC: {mnemonic: "CALL C,%s", args: 2},
	0xDE: {mnemonic: "SBC  A,%s", args: 1},
	0xDF: {mnemonic: "RST  18h"},
	0xE0: {mnemonic: "RET  PO"},
	0xE1: {mnemonic: "POP  HL"},
	0xE2: {mnemonic: "JP   PO,%s", args: 2},
	0xE3: {mnemonic: "EX   (SP),HL"},
	0xE4: {mnemonic: "CALL PO,%s", args: 2},
	0xE5: {mnemonic: "PUSH HL"},
	0xE6: {mnemonic: "AND  %s", args: 1},
	0xE7: {mnemonic: "RST  20h"},
	0xE8: {mnemonic: "RET  PE"},
	0xE9: {mnemonic: "JP   (HL)"},
	0xEA: {mnemonic: "JP   PE,%s", args: 2},
	0xEB: {mnemonic: "EX   DE,HL"},
	0xEC: {mnemonic: "CALL PE,%s", args: 2},
	0xEE: {mnemonic: "XOR  %s", args: 1},
	0xEF: {mnemonic: "RST  28h"},
	0xF0: {mnemonic: "RET  P"},
	0xF1: {mnemonic: "POP  AF"},
	0xF2: {mnemonic: "JP   P,%s", args: 2},
	0xF3: {mnemonic: "DI"},
	0xF4: {mnemonic: "CALL P,%s", args: 2},
	0xF5: {mnemonic: "PUSH AF"},
	0xF6: {mnemonic: "OR   %s", args: 1},
	0xF7: {mnemonic: "RST  30h"},
	0xF8: {mnemonic: "RET  M"},
	0xF9: {mnemonic: "LD   SP,HL"},
	0xFA: {mnemonic: "JP   M,%s", args: 2},
	0xFB: {mnemonic: "EI"},
	0xFC: {mnemonic: "CALL M,%s", args: 2},
	0xFE: {mnemonic: "CP   %s", args: 1},
	0xFF: {mnemonic: "RST  38h"},
}

// Table containing ED prefixed opcodes
var edOpcodes = []*opcode{
	0x40: {mnemonic: "IN   B,(C)"},
	0x41: {mnemonic: "OUT  (C),B"},
	0x42: {mnemonic: "SBC  HL,BC"},
	0x43: {mnemonic: "LD   (%s),BC", args: 2},
	0x44: {mnemonic: "NEG"},
	0x45: {mnemonic: "RETN"},
	0x46: {mnemonic: "IM   0"},
	0x47: {mnemonic: "LD   I,A"},
	0x48: {mnemonic: "IN   C,(C)"},
	0x49: {mnemonic: "OUT  (C),C"},
	0x4A: {mnemonic: "ADC  HL,BC"},
	0x4B: {mnemonic: "LD   BC,(%s)", args: 2},
	0x4C: {mnemonic: "NEG"},
	0x4D: {mnemonic: "RETI"},
	0x4F: {mnemonic: "LD   R,A"},
	0x50: {mnemonic: "IN   D,(C)"},
	0x51: {mnemonic: "OUT  (C),D"},
	0x52: {mnemonic: "SBC  HL,DE"},
	0x53: {mnemonic: "LD   (%s),DE", args: 2},
	0x54: {mnemonic: "NEG"},
	0x55: {mnemonic: "RETN"},
	0x56: {mnemonic: "IM   1"},
	0x57: {mnemonic: "LD   A,I"},
	0x58: {mnemonic: "IN   E,(C)"},
	0x59: {mnemonic: "OUT  (C),E"},
	0x5A: {mnemonic: "ADC  HL,DE"},
	0x5B: {mnemonic: "LD   DE,(%s)", args: 2},
	0x5C: {mnemonic: "NEG"},
	0x5D: {mnemonic: "RETN"},
	0x5E: {mnemonic: "IM   2"},
	0x5F: {mnemonic: "LD   A,R"},
	0x60: {mnemonic: "IN   H,(C)"},
	0x61: {mnemonic: "OUT  (C),H"},
	0x62: {mnemonic: "SBC  HL,HL"},
	0x63: {mnemonic: "LD   (%s),HL", args: 2},
	0x64: {mnemonic: "NEG"},
	0x65: {mnemonic: "RETN"},
	0x67: {mnemonic: "RRD"},
	0x68: {mnemonic: "IN   L,(C)"},
	0x69: {mnemonic: "OUT  (C),L"},
	0x6A: {mnemonic: "ADC  HL,HL"},
	0x6B: {mnemonic: "LD   HL,(%s)", args: 2},
	0x6C: {mnemonic: "NEG"},
	0x6D: {mnemonic: "RETN"},
	0x6F: {mnemonic: "RLD"},
	0x70: {mnemonic: "IN   F,(C)"},
	0x71: {mnemonic: "OUT  (C),F"},
	0x72: {mnemonic: "SBC  HL,SP"},
	0x73: {mnemonic: "LD   (%s),SP", args: 2},
	0x74: {mnemonic: "NEG"},
	0x75: {mnemonic: "RETN"},
	0x78: {mnemonic: "IN   A,(C)"},
	0x79: {mnemonic: "OUT  (C),A"},
	0x7A: {mnemonic: "ADC  HL,SP"},
	0x7B: {mnemonic: "LD   SP,(%s)", args: 2},
	0x7C: {mnemonic: "NEG"},
	0x7D: {mnemonic: "RETN"},
	0xA0: {mnemonic: "LDI"},
	0xA1: {mnemonic: "CPI"},
	0xA2: {mnemonic: "INI"},
	0xA3: {mnemonic: "OUTI"},
	0xA8: {mnemonic: "LDD"},
	0xA9: {mnemonic: "CPD"},
	0xAA: {mnemonic: "IND"},
	0xAB: {mnemonic: "OUTD"},
	0xB0: {mnemonic: "LDIR"},
	0xB1: {mnemonic: "CPIR"},
	0xB2: {mnemonic: "INIR"},
	0xB3: {mnemonic: "OTIR"},
	0xB8: {mnemonic: "LDDR"},
	0xB9: {mnemonic: "CPDR"},
	0xBA: {mnemonic: "INDR"},
	0xBB: {mnemonic: "OTDR"},
	0xFF: nil,
}

// Table containing CB prefixed opcodes
var cbOpcodes = []*opcode{
	0x00: {mnemonic: "RLC  B"},
	0x01: {mnemonic: "RLC  C"},
	0x02: {mnemonic: "RLC  D"},
	0x03: {mnemonic: "RLC  E"},
	0x04: {mnemonic: "RLC  H"},
	0x05: {mnemonic: "RLC  L"},
	0x06: {mnemonic: "RLC  (HL)"},
	0x07: {mnemonic: "RLC  A"},
	0x08: {mnemonic: "RRC  B"},
	0x09: {mnemonic: "RRC  C"},
	0x0A: {mnemonic: "RRC  D"},
	0x0B: {mnemonic: "RRC  E"},
	0x0C: {mnemonic: "RRC  H"},
	0x0D: {mnemonic: "RRC  L"},
	0x0E: {mnemonic: "RRC  (HL)"},
	0x0F: {mnemonic: "RRC  A"},
	0x10: {mnemonic: "RL   B"},
	0x11: {mnemonic: "RL   C"},
	0x12: {mnemonic: "RL   D"},
	0x13: {mnemonic: "RL   E"},
	0x14: {mnemonic: "RL   H"},
	0x15: {mnemonic: "RL   L"},
	0x16: {mnemonic: "RL   (HL)"},
	0x17: {mnemonic: "RL   A"},
	0x18: {mnemonic: "RR   B"},
	0x19: {mnemonic: "RR   C"},
	0x1A: {mnemonic: "RR   D"},
	0x1B: {mnemonic: "RR   E"},
	0x1C: {mnemonic: "RR   H"},
	0x1D: {mnemonic: "RR   L"},
	0x1E: {mnemonic: "RR   (HL)"},
	0x1F: {mnemonic: "RR   A"},
	0x20: {mnemonic: "SLA  B"},
	0x21: {mnemonic: "SLA  C"},
	0x22: {mnemonic: "SLA  D"},
	0x23: {mnemonic: "SLA  E"},
	0x24: {mnemonic: "SLA  H"},
	0x25: {mnemonic: "SLA  L"},
	0x26: {mnemonic: "SLA  (HL)"},
	0x27: {mnemonic: "SLA  A"},
	0x28: {mnemonic: "SRA  B"},
	0x29: {mnemonic: "SRA  C"},
	0x2A: {mnemonic: "SRA  D"},
	0x2B: {mnemonic: "SRA  E"},
	0x2C: {mnemonic: "SRA  H"},
	0x2D: {mnemonic: "SRA  L"},
	0x2E: {mnemonic: "SRA  (HL)"},
	0x2F: {mnemonic: "SRA  A"},
	0x30: {mnemonic: "SL1  B"},
	0x31: {mnemonic: "SL1  C"},
	0x32: {mnemonic: "SL1  D"},
	0x33: {mnemonic: "SL1  E"},
	0x34: {mnemonic: "SL1  H"},
	0x35: {mnemonic: "SL1  L"},
	0x36: {mnemonic: "SL1  (HL)"},
	0x37: {mnemonic: "SL1  A"},
	0x38: {mnemonic: "SRL  B"},
	0x39: {mnemonic: "SRL  C"},
	0x3A: {mnemonic: "SRL  D"},
	0x3B: {mnemonic: "SRL  E"},
	0x3C: {mnemonic: "SRL  H"},
	0x3D: {mnemonic: "SRL  L"},
	0x3E: {mnemonic: "SRL  (HL)"},
	0x3F: {mnemonic: "SRL  A"},
	0x40: {mnemonic: "BIT  0,B"},
	0x41: {mnemonic: "BIT  0,C"},
	0x42: {mnemonic: "BIT  0,D"},
	0x43: {mnemonic: "BIT  0,E"},
	0x44: {mnemonic: "BIT  0,H"},
	0x45: {mnemonic: "BIT  0,L"},
	0x46: {mnemonic: "BIT  0,(HL)"},
	0x47: {mnemonic: "BIT  0,A"},
	0x48: {mnemonic: "BIT  1,B"},
	0x49: {mnemonic: "BIT  1,C"},
	0x4A: {mnemonic: "BIT  1,D"},
	0x4B: {mnemonic: "BIT  1,E"},
	0x4C: {mnemonic: "BIT  1,H"},
	0x4D: {mnemonic: "BIT  1,L"},
	0x4E: {mnemonic: "BIT  1,(HL)"},
	0x4F: {mnemonic: "BIT  1,A"},
	0x50: {mnemonic: "BIT  2,B"},
	0x51: {mnemonic: "BIT  2,C"},
	0x52: {mnemonic: "BIT  2,D"},
	0x53: {mnemonic: "BIT  2,E"},
	0x54: {mnemonic: "BIT  2,H"},
	0x55: {mnemonic: "BIT  2,L"},
	0x56: {mnemonic: "BIT  2,(HL)"},
	0x57: {mnemonic: "BIT  2,A"},
	0x58: {mnemonic: "BIT  3,B"},
	0x59: {mnemonic: "BIT  3,C"},
	0x5A: {mnemonic: "BIT  3,D"},
	0x5B: {mnemonic: "BIT  3,E"},
	0x5C: {mnemonic: "BIT  3,H"},
	0x5D: {mnemonic: "BIT  3,L"},
	0x5E: {mnemonic: "BIT  3,(HL)"},
	0x5F: {mnemonic: "BIT  3,A"},
	0x60: {mnemonic: "BIT  4,B"},
	0x61: {mnemonic: "BIT  4,C"},
	0x62: {mnemonic: "BIT  4,D"},
	0x63: {mnemonic: "BIT  4,E"},
	0x64: {mnemonic: "BIT  4,H"},
	0x65: {mnemonic: "BIT  4,L"},
	0x66: {mnemonic: "BIT  4,(HL)"},
	0x67: {mnemonic: "BIT  4,A"},
	0x68: {mnemonic: "BIT  5,B"},
	0x69: {mnemonic: "BIT  5,C"},
	0x6A: {mnemonic: "BIT  5,D"},
	0x6B: {mnemonic: "BIT  5,E"},
	0x6C: {mnemonic: "BIT  5,H"},
	0x6D: {mnemonic: "BIT  5,L"},
	0x6E: {mnemonic: "BIT  5,(HL)"},
	0x6F: {mnemonic: "BIT  5,A"},
	0x70: {mnemonic: "BIT  6,B"},
	0x71: {mnemonic: "BIT  6,C"},
	0x72: {mnemonic: "BIT  6,D"},
	0x73: {mnemonic: "BIT  6,E"},
	0x74: {mnemonic: "BIT  6,H"},
	0x75: {mnemonic: "BIT  6,L"},
	0x76: {mnemonic: "BIT  6,(HL)"},
	0x77: {mnemonic: "BIT  6,A"},
	0x78: {mnemonic: "BIT  7,B"},
	0x79: {mnemonic: "BIT  7,C"},
	0x7A: {mnemonic: "BIT  7,D"},
	0x7B: {mnemonic: "BIT  7,E"},
	0x7C: {mnemonic: "BIT  7,H"},
	0x7D: {mnemonic: "BIT  7,L"},
	0x7E: {mnemonic: "BIT  7,(HL)"},
	0x7F: {mnemonic: "BIT  7,A"},
	0x80: {mnemonic: "RES  0,B"},
	0x81: {mnemonic: "RES  0,C"},
	0x82: {mnemonic: "RES  0,D"},
	0x83: {mnemonic: "RES  0,E"},
	0x84: {mnemonic: "RES  0,H"},
	0x85: {mnemonic: "RES  0,L"},
	0x86: {mnemonic: "RES  0,(HL)"},
	0x87: {mnemonic: "RES  0,A"},
	0x88: {mnemonic: "RES  1,B"},
	0x89: {mnemonic: "RES  1,C"},
	0x8A: {mnemonic: "RES  1,D"},
	0x8B: {mnemonic: "RES  1,E"},
	0x8C: {mnemonic: "RES  1,H"},
	0x8D: {mnemonic: "RES  1,L"},
	0x8E: {mnemonic: "RES  1,(HL)"},
	0x8F: {mnemonic: "RES  1,A"},
	0x90: {mnemonic: "RES  2,B"},
	0x91: {mnemonic: "RES  2,C"},
	0x92: {mnemonic: "RES  2,D"},
	0x93: {mnemonic: "RES  2,E"},
	0x94: {mnemonic: "RES  2,H"},
	0x95: {mnemonic: "RES  2,L"},
	0x96: {mnemonic: "RES  2,(HL)"},
	0x97: {mnemonic: "RES  2,A"},
	0x98: {mnemonic: "RES  3,B"},
	0x99: {mnemonic: "RES  3,C"},
	0x9A: {mnemonic: "RES  3,D"},
	0x9B: {mnemonic: "RES  3,E"},
	0x9C: {mnemonic: "RES  3,H"},
	0x9D: {mnemonic: "RES  3,L"},
	0x9E: {mnemonic: "RES  3,(HL)"},
	0x9F: {mnemonic: "RES  3,A"},
	0xA0: {mnemonic: "RES  4,B"},
	0xA1: {mnemonic: "RES  4,C"},
	0xA2: {mnemonic: "RES  4,D"},
	0xA3: {mnemonic: "RES  4,E"},
	0xA4: {mnemonic: "RES  4,H"},
	0xA5: {mnemonic: "RES  4,L"},
	0xA6: {mnemonic: "RES  4,(HL)"},
	0xA7: {mnemonic: "RES  4,A"},
	0xA8: {mnemonic: "RES  5,B"},
	0xA9: {mnemonic: "RES  5,C"},
	0xAA: {mnemonic: "RES  5,D"},
	0xAB: {mnemonic: "RES  5,E"},
	0xAC: {mnemonic: "RES  5,H"},
	0xAD: {mnemonic: "RES  5,L"},
	0xAE: {mnemonic: "RES  5,(HL)"},
	0xAF: {mnemonic: "RES  5,A"},
	0xB0: {mnemonic: "RES  6,B"},
	0xB1: {mnemonic: "RES  6,C"},
	0xB2: {mnemonic: "RES  6,D"},
	0xB3: {mnemonic: "RES  6,E"},
	0xB4: {mnemonic: "RES  6,H"},
	0xB5: {mnemonic: "RES  6,L"},
	0xB6: {mnemonic: "RES  6,(HL)"},
	0xB7: {mnemonic: "RES  6,A"},
	0xB8: {mnemonic: "RES  7,B"},
	0xB9: {mnemonic: "RES  7,C"},
	0xBA: {mnemonic: "RES  7,D"},
	0xBB: {mnemonic: "RES  7,E"},
	0xBC: {mnemonic: "RES  7,H"},
	0xBD: {mnemonic: "RES  7,L"},
	0xBE: {mnemonic: "RES  7,(HL)"},
	0xBF: {mnemonic: "RES  7,A"},
	0xC0: {mnemonic: "SET  0,B"},
	0xC1: {mnemonic: "SET  0,C"},
	0xC2: {mnemonic: "SET  0,D"},
	0xC3: {mnemonic: "SET  0,E"},
	0xC4: {mnemonic: "SET  0,H"},
	0xC5: {mnemonic: "SET  0,L"},
	0xC6: {mnemonic: "SET  0,(HL)"},
	0xC7: {mnemonic: "SET  0,A"},
	0xC8: {mnemonic: "SET  1,B"},
	0xC9: {mnemonic: "SET  1,C"},
	0xCA: {mnemonic: "SET  1,D"},
	0xCB: {mnemonic: "SET  1,E"},
	0xCC: {mnemonic: "SET  1,H"},
	0xCD: {mnemonic: "SET  1,L"},
	0xCE: {mnemonic: "SET  1,(HL)"},
	0xCF: {mnemonic: "SET  1,A"},
	0xD0: {mnemonic: "SET  2,B"},
	0xD1: {mnemonic: "SET  2,C"},
	0xD2: {mnemonic: "SET  2,D"},
	0xD3: {mnemonic: "SET  2,E"},
	0xD4: {mnemonic: "SET  2,H"},
	0xD5: {mnemonic: "SET  2,L"},
	0xD6: {mnemonic: "SET  2,(HL)"},
	0xD7: {mnemonic: "SET  2,A"},
	0xD8: {mnemonic: "SET  3,B"},
	0xD9: {mnemonic: "SET  3,C"},
	0xDA: {mnemonic: "SET  3,D"},
	0xDB: {mnemonic: "SET  3,E"},
	0xDC: {mnemonic: "SET  3,H"},
	0xDD: {mnemonic: "SET  3,L"},
	0xDE: {mnemonic: "SET  3,(HL)"},
	0xDF: {mnemonic: "SET  3,A"},
	0xE0: {mnemonic: "SET  4,B"},
	0xE1: {mnemonic: "SET  4,C"},
	0xE2: {mnemonic: "SET  4,D"},
	0xE3: {mnemonic: "SET  4,E"},
	0xE4: {mnemonic: "SET  4,H"},
	0xE5: {mnemonic: "SET  4,L"},
	0xE6: {mnemonic: "SET  4,(HL)"},
	0xE7: {mnemonic: "SET  4,A"},
	0xE8: {mnemonic: "SET  5,B"},
	0xE9: {mnemonic: "SET  5,C"},
	0xEA: {mnemonic: "SET  5,D"},
	0xEB: {mnemonic: "SET  5,E"},
	0xEC: {mnemonic: "SET  5,H"},
	0xED: {mnemonic: "SET  5,L"},
	0xEE: {mnemonic: "SET  5,(HL)"},
	0xEF: {mnemonic: "SET  5,A"},
	0xF0: {mnemonic: "SET  6,B"},
	0xF1: {mnemonic: "SET  6,C"},
	0xF2: {mnemonic: "SET  6,D"},
	0xF3: {mnemonic: "SET  6,E"},
	0xF4: {mnemonic: "SET  6,H"},
	0xF5: {mnemonic: "SET  6,L"},
	0xF6: {mnemonic: "SET  6,(HL)"},
	0xF7: {mnemonic: "SET  6,A"},
	0xF8: {mnemonic: "SET  7,B"},
	0xF9: {mnemonic: "SET  7,C"},
	0xFA: {mnemonic: "SET  7,D"},
	0xFB: {mnemonic: "SET  7,E"},
	0xFC: {mnemonic: "SET  7,H"},
	0xFD: {mnemonic: "SET  7,L"},
	0xFE: {mnemonic: "SET  7,(HL)"},
	0xFF: {mnemonic: "SET  7,A"},
}

// Table containing DD (IX) prefixed opcodes
var ddOpcodes = []*opcode{}

// Table containing FD (IX) prefixed opcodes
var fdOpcodes = []*opcode{}
