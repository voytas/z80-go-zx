package dasm

// Table containing IY instructions (FD prefIY)
var fdInstructions = []*instruction{
	0x09: {mnemonic: "ADD  IY,BC", size: 2},
	0x19: {mnemonic: "ADD  IY,DE", size: 2},
	0x21: {mnemonic: "LD   IY,$1$2", args: []int{3, 2}, size: 4},
	0x22: {mnemonic: "LD   ($1$2),IY", args: []int{3, 2}, size: 4},
	0x23: {mnemonic: "INC  IY", size: 2},
	0x24: {mnemonic: "INC  IYH", size: 2},
	0x25: {mnemonic: "DEC  IYH", size: 2},
	0x26: {mnemonic: "LD   IYH,$1", args: []int{2}, size: 3},
	0x29: {mnemonic: "ADD  IY,IY", size: 2},
	0x2A: {mnemonic: "LD   IY,($1$2)", args: []int{3, 2}, size: 4},
	0x2B: {mnemonic: "DEC  IY", size: 2},
	0x2C: {mnemonic: "INC  IYL", size: 2},
	0x2D: {mnemonic: "DEC  IYL", size: 2},
	0x2E: {mnemonic: "LD   IYL,$1", args: []int{2}, size: 3},
	0x34: {mnemonic: "INC  (IY+$1)", args: []int{2}, size: 3},
	0x35: {mnemonic: "DEC  (IY)", size: 2},
	0x36: {mnemonic: "LD   (IY+$1),$2", args: []int{3, 2}, size: 4},
	0x39: {mnemonic: "ADD  IY,SP", size: 2},
	0x44: {mnemonic: "LD   B,IYH", size: 2},
	0x45: {mnemonic: "LD   B,IYL", size: 2},
	0x46: {mnemonic: "LD   B,(IY+$1)", args: []int{2}, size: 3},
	0x4C: {mnemonic: "LD   C,IYH", size: 2},
	0x4D: {mnemonic: "LD   C,IYL", size: 2},
	0x4E: {mnemonic: "LD   C,(IY+$1)", args: []int{2}, size: 3},
	0x54: {mnemonic: "LD   D,IYH", size: 2},
	0x55: {mnemonic: "LD   D,IYL", size: 2},
	0x56: {mnemonic: "LD   D,(IY+$1)", args: []int{2}, size: 3},
	0x5C: {mnemonic: "LD   E,IYH", size: 2},
	0x5D: {mnemonic: "LD   E,IYL", size: 2},
	0x5E: {mnemonic: "LD   E,(IY+$1)", args: []int{2}, size: 3},
	0x60: {mnemonic: "LD   IYH,B", size: 2},
	0x61: {mnemonic: "LD   IYH,C", size: 2},
	0x62: {mnemonic: "LD   IYH,D", size: 2},
	0x63: {mnemonic: "LD   IYH,E", size: 2},
	0x64: {mnemonic: "LD   IYH,IYH", size: 2},
	0x65: {mnemonic: "LD   IYH,IYL", size: 2},
	0x66: {mnemonic: "LD   H,(IY+$1)", args: []int{2}, size: 3},
	0x67: {mnemonic: "LD   IYH,A", size: 2},
	0x68: {mnemonic: "LD   IYL,B", size: 2},
	0x69: {mnemonic: "LD   IYL,C", size: 2},
	0x6A: {mnemonic: "LD   IYL,D", size: 2},
	0x6B: {mnemonic: "LD   IYL,E", size: 2},
	0x6C: {mnemonic: "LD   IYL,IYH", size: 2},
	0x6D: {mnemonic: "LD   IYL,IYL", size: 2},
	0x6E: {mnemonic: "LD   L,(IY+$1)", args: []int{2}, size: 3},
	0x6F: {mnemonic: "LD   IYL,A", size: 2},
	0x70: {mnemonic: "LD   (IY+$1),B", args: []int{2}, size: 3},
	0x71: {mnemonic: "LD   (IY+$1),C", args: []int{2}, size: 3},
	0x72: {mnemonic: "LD   (IY+$1),D", args: []int{2}, size: 3},
	0x73: {mnemonic: "LD   (IY+$1),E", args: []int{2}, size: 3},
	0x74: {mnemonic: "LD   (IY+$1),H", args: []int{2}, size: 3},
	0x75: {mnemonic: "LD   (IY+$1),L", args: []int{2}, size: 3},
	0x77: {mnemonic: "LD   (IY+$1),A", args: []int{2}, size: 3},
	0x7C: {mnemonic: "LD   A,IYH", size: 2},
	0x7D: {mnemonic: "LD   A,IYL", size: 2},
	0x7E: {mnemonic: "LD   A,(IY+$1)", args: []int{2}, size: 3},
	0x84: {mnemonic: "ADD  A,IYH", size: 2},
	0x85: {mnemonic: "ADD  A,IYL", size: 2},
	0x86: {mnemonic: "ADD  A,(IY+$1)", args: []int{2}, size: 3},
	0x8C: {mnemonic: "ADC  A,IYH", size: 2},
	0x8D: {mnemonic: "ADC  A,IYL", size: 2},
	0x8E: {mnemonic: "ADC  A,(IY+$1)", args: []int{2}, size: 3},
	0x94: {mnemonic: "SUB  IYH", size: 2},
	0x95: {mnemonic: "SUB  IYL", size: 2},
	0x96: {mnemonic: "SUB  (IY+$1)", args: []int{2}, size: 3},
	0x9C: {mnemonic: "SBC  A,IYH", size: 2},
	0x9D: {mnemonic: "SBC  A,IYL", size: 2},
	0x9E: {mnemonic: "SBC  A,(IY+$1)", args: []int{2}, size: 3},
	0xA4: {mnemonic: "AND  IYH", size: 2},
	0xA5: {mnemonic: "AND  IYL", size: 2},
	0xA6: {mnemonic: "AND  (IY+$1)", args: []int{2}, size: 3},
	0xAC: {mnemonic: "XOR  IYH", size: 2},
	0xAD: {mnemonic: "XOR  IYL", size: 2},
	0xAE: {mnemonic: "XOR  (IY+$1)", args: []int{2}, size: 3},
	0xB4: {mnemonic: "OR   IYH", size: 2},
	0xB5: {mnemonic: "OR   IYL", size: 2},
	0xB6: {mnemonic: "OR   (IY+$1)", args: []int{2}, size: 3},
	0xBC: {mnemonic: "CP   IYH", size: 2},
	0xBD: {mnemonic: "CP   IYL", size: 2},
	0xBE: {mnemonic: "CP   (IY+$1)", args: []int{2}, size: 3},
	0xE1: {mnemonic: "POP  IY", size: 2},
	0xE3: {mnemonic: "EX   (SP),IY", size: 2},
	0xE5: {mnemonic: "PUSH IY", size: 2},
	0xE9: {mnemonic: "JP   (IY)", size: 2},
	0xF9: {mnemonic: "LD   SP,IY", size: 2},
	0xFF: nil,
}
