package dasm

// Table containing DDCB (IX) prefixed instructions
var ddcbInstructions = []*instruction{
	0x00: {mnemonic: "RLC  (IX+$1),B", args: []int{2}, size: 4},
	0x01: {mnemonic: "RLC  (IX+$1),C", args: []int{2}, size: 4},
	0x02: {mnemonic: "RLC  (IX+$1),D", args: []int{2}, size: 4},
	0x03: {mnemonic: "RLC  (IX+$1),E", args: []int{2}, size: 4},
	0x04: {mnemonic: "RLC  (IX+$1),H", args: []int{2}, size: 4},
	0x05: {mnemonic: "RLC  (IX+$1),L", args: []int{2}, size: 4},
	0x06: {mnemonic: "RLC  (IX+$1)", args: []int{2}, size: 4},
	0x07: {mnemonic: "RLC  (IX+$1),A", args: []int{2}, size: 4},
	0x08: {mnemonic: "RRC  (IX+$1),B", args: []int{2}, size: 4},
	0x09: {mnemonic: "RRC  (IX+$1),C", args: []int{2}, size: 4},
	0x0A: {mnemonic: "RRC  (IX+$1),D", args: []int{2}, size: 4},
	0x0B: {mnemonic: "RRC  (IX+$1),E", args: []int{2}, size: 4},
	0x0C: {mnemonic: "RRC  (IX+$1),H", args: []int{2}, size: 4},
	0x0D: {mnemonic: "RRC  (IX+$1),L", args: []int{2}, size: 4},
	0x0E: {mnemonic: "RRC  (IX+$1)", args: []int{2}, size: 4},
	0x0F: {mnemonic: "RRC  (IX+$1),A", args: []int{2}, size: 4},
	0x10: {mnemonic: "RL   (IX+$1),B", args: []int{2}, size: 4},
	0x11: {mnemonic: "RL   (IX+$1),C", args: []int{2}, size: 4},
	0x12: {mnemonic: "RL   (IX+$1),D", args: []int{2}, size: 4},
	0x13: {mnemonic: "RL   (IX+$1),E", args: []int{2}, size: 4},
	0x14: {mnemonic: "RL   (IX+$1),H", args: []int{2}, size: 4},
	0x15: {mnemonic: "RL   (IX+$1),L", args: []int{2}, size: 4},
	0x16: {mnemonic: "RL   (IX+$1)", args: []int{2}, size: 4},
	0x17: {mnemonic: "RL   (IX+$1),A", args: []int{2}, size: 4},
	0x18: {mnemonic: "RR   (IX+$1),B", args: []int{2}, size: 4},
	0x19: {mnemonic: "RR   (IX+$1),C", args: []int{2}, size: 4},
	0x1A: {mnemonic: "RR   (IX+$1),D", args: []int{2}, size: 4},
	0x1B: {mnemonic: "RR   (IX+$1),E", args: []int{2}, size: 4},
	0x1C: {mnemonic: "RR   (IX+$1),H", args: []int{2}, size: 4},
	0x1D: {mnemonic: "RR   (IX+$1),L", args: []int{2}, size: 4},
	0x1E: {mnemonic: "RR   (IX+$1)", args: []int{2}, size: 4},
	0x1F: {mnemonic: "RR   (IX+$1),A", args: []int{2}, size: 4},
	0x20: {mnemonic: "SLA  (IX+$1),B", args: []int{2}, size: 4},
	0x21: {mnemonic: "SLA  (IX+$1),C", args: []int{2}, size: 4},
	0x22: {mnemonic: "SLA  (IX+$1),D", args: []int{2}, size: 4},
	0x23: {mnemonic: "SLA  (IX+$1),E", args: []int{2}, size: 4},
	0x24: {mnemonic: "SLA  (IX+$1),H", args: []int{2}, size: 4},
	0x25: {mnemonic: "SLA  (IX+$1),L", args: []int{2}, size: 4},
	0x26: {mnemonic: "SLA  (IX+$1)", args: []int{2}, size: 4},
	0x27: {mnemonic: "SLA  (IX+$1),A", args: []int{2}, size: 4},
	0x28: {mnemonic: "SRA  (IX+$1),B", args: []int{2}, size: 4},
	0x29: {mnemonic: "SRA  (IX+$1),C", args: []int{2}, size: 4},
	0x2A: {mnemonic: "SRA  (IX+$1),D", args: []int{2}, size: 4},
	0x2B: {mnemonic: "SRA  (IX+$1),E", args: []int{2}, size: 4},
	0x2C: {mnemonic: "SRA  (IX+$1),H", args: []int{2}, size: 4},
	0x2D: {mnemonic: "SRA  (IX+$1),L", args: []int{2}, size: 4},
	0x2E: {mnemonic: "SRA  (IX+$1)", args: []int{2}, size: 4},
	0x2F: {mnemonic: "SRA  (IX+$1),A", args: []int{2}, size: 4},
	0x30: {mnemonic: "SL1  (IX+$1),B", args: []int{2}, size: 4},
	0x31: {mnemonic: "SL1  (IX+$1),C", args: []int{2}, size: 4},
	0x32: {mnemonic: "SL1  (IX+$1),D", args: []int{2}, size: 4},
	0x33: {mnemonic: "SL1  (IX+$1),E", args: []int{2}, size: 4},
	0x34: {mnemonic: "SL1  (IX+$1),H", args: []int{2}, size: 4},
	0x35: {mnemonic: "SL1  (IX+$1),L", args: []int{2}, size: 4},
	0x36: {mnemonic: "SL1  (IX+$1)", args: []int{2}, size: 4},
	0x37: {mnemonic: "SL1  (IX+$1),A", args: []int{2}, size: 4},
	0x38: {mnemonic: "SRL  (IX+$1),B", args: []int{2}, size: 4},
	0x39: {mnemonic: "SRL  (IX+$1),C", args: []int{2}, size: 4},
	0x3A: {mnemonic: "SRL  (IX+$1),D", args: []int{2}, size: 4},
	0x3B: {mnemonic: "SRL  (IX+$1),E", args: []int{2}, size: 4},
	0x3C: {mnemonic: "SRL  (IX+$1),H", args: []int{2}, size: 4},
	0x3D: {mnemonic: "SRL  (IX+$1),L", args: []int{2}, size: 4},
	0x3E: {mnemonic: "SRL  (IX+$1)", args: []int{2}, size: 4},
	0x3F: {mnemonic: "SRL  (IX+$1),A", args: []int{2}, size: 4},
	0x40: {mnemonic: "BIT  0,(IX+$1)", args: []int{2}, size: 4},
	0x41: {mnemonic: "BIT  0,(IX+$1)", args: []int{2}, size: 4},
	0x42: {mnemonic: "BIT  0,(IX+$1)", args: []int{2}, size: 4},
	0x43: {mnemonic: "BIT  0,(IX+$1)", args: []int{2}, size: 4},
	0x44: {mnemonic: "BIT  0,(IX+$1)", args: []int{2}, size: 4},
	0x45: {mnemonic: "BIT  0,(IX+$1)", args: []int{2}, size: 4},
	0x46: {mnemonic: "BIT  0,(IX+$1)", args: []int{2}, size: 4},
	0x47: {mnemonic: "BIT  0,(IX+$1)", args: []int{2}, size: 4},
	0x48: {mnemonic: "BIT  1,(IX+$1)", args: []int{2}, size: 4},
	0x49: {mnemonic: "BIT  1,(IX+$1)", args: []int{2}, size: 4},
	0x4A: {mnemonic: "BIT  1,(IX+$1)", args: []int{2}, size: 4},
	0x4B: {mnemonic: "BIT  1,(IX+$1)", args: []int{2}, size: 4},
	0x4C: {mnemonic: "BIT  1,(IX+$1)", args: []int{2}, size: 4},
	0x4D: {mnemonic: "BIT  1,(IX+$1)", args: []int{2}, size: 4},
	0x4E: {mnemonic: "BIT  1,(IX+$1)", args: []int{2}, size: 4},
	0x4F: {mnemonic: "BIT  1,(IX+$1)", args: []int{2}, size: 4},
	0x50: {mnemonic: "BIT  2,(IX+$1)", args: []int{2}, size: 4},
	0x51: {mnemonic: "BIT  2,(IX+$1)", args: []int{2}, size: 4},
	0x52: {mnemonic: "BIT  2,(IX+$1)", args: []int{2}, size: 4},
	0x53: {mnemonic: "BIT  2,(IX+$1)", args: []int{2}, size: 4},
	0x54: {mnemonic: "BIT  2,(IX+$1)", args: []int{2}, size: 4},
	0x55: {mnemonic: "BIT  2,(IX+$1)", args: []int{2}, size: 4},
	0x56: {mnemonic: "BIT  2,(IX+$1)", args: []int{2}, size: 4},
	0x57: {mnemonic: "BIT  2,(IX+$1)", args: []int{2}, size: 4},
	0x58: {mnemonic: "BIT  3,(IX+$1)", args: []int{2}, size: 4},
	0x59: {mnemonic: "BIT  3,(IX+$1)", args: []int{2}, size: 4},
	0x5A: {mnemonic: "BIT  3,(IX+$1)", args: []int{2}, size: 4},
	0x5B: {mnemonic: "BIT  3,(IX+$1)", args: []int{2}, size: 4},
	0x5C: {mnemonic: "BIT  3,(IX+$1)", args: []int{2}, size: 4},
	0x5D: {mnemonic: "BIT  3,(IX+$1)", args: []int{2}, size: 4},
	0x5E: {mnemonic: "BIT  3,(IX+$1)", args: []int{2}, size: 4},
	0x5F: {mnemonic: "BIT  3,(IX+$1)", args: []int{2}, size: 4},
	0x60: {mnemonic: "BIT  4,(IX+$1)", args: []int{2}, size: 4},
	0x61: {mnemonic: "BIT  4,(IX+$1)", args: []int{2}, size: 4},
	0x62: {mnemonic: "BIT  4,(IX+$1)", args: []int{2}, size: 4},
	0x63: {mnemonic: "BIT  4,(IX+$1)", args: []int{2}, size: 4},
	0x64: {mnemonic: "BIT  4,(IX+$1)", args: []int{2}, size: 4},
	0x65: {mnemonic: "BIT  4,(IX+$1)", args: []int{2}, size: 4},
	0x66: {mnemonic: "BIT  4,(IX+$1)", args: []int{2}, size: 4},
	0x67: {mnemonic: "BIT  4,(IX+$1)", args: []int{2}, size: 4},
	0x68: {mnemonic: "BIT  5,(IX+$1)", args: []int{2}, size: 4},
	0x69: {mnemonic: "BIT  5,(IX+$1)", args: []int{2}, size: 4},
	0x6A: {mnemonic: "BIT  5,(IX+$1)", args: []int{2}, size: 4},
	0x6B: {mnemonic: "BIT  5,(IX+$1)", args: []int{2}, size: 4},
	0x6C: {mnemonic: "BIT  5,(IX+$1)", args: []int{2}, size: 4},
	0x6D: {mnemonic: "BIT  5,(IX+$1)", args: []int{2}, size: 4},
	0x6E: {mnemonic: "BIT  5,(IX+$1)", args: []int{2}, size: 4},
	0x6F: {mnemonic: "BIT  5,(IX+$1)", args: []int{2}, size: 4},
	0x70: {mnemonic: "BIT  6,(IX+$1)", args: []int{2}, size: 4},
	0x71: {mnemonic: "BIT  6,(IX+$1)", args: []int{2}, size: 4},
	0x72: {mnemonic: "BIT  6,(IX+$1)", args: []int{2}, size: 4},
	0x73: {mnemonic: "BIT  6,(IX+$1)", args: []int{2}, size: 4},
	0x74: {mnemonic: "BIT  6,(IX+$1)", args: []int{2}, size: 4},
	0x75: {mnemonic: "BIT  6,(IX+$1)", args: []int{2}, size: 4},
	0x76: {mnemonic: "BIT  6,(IX+$1)", args: []int{2}, size: 4},
	0x77: {mnemonic: "BIT  6,(IX+$1)", args: []int{2}, size: 4},
	0x78: {mnemonic: "BIT  7,(IX+$1)", args: []int{2}, size: 4},
	0x79: {mnemonic: "BIT  7,(IX+$1)", args: []int{2}, size: 4},
	0x7A: {mnemonic: "BIT  7,(IX+$1)", args: []int{2}, size: 4},
	0x7B: {mnemonic: "BIT  7,(IX+$1)", args: []int{2}, size: 4},
	0x7C: {mnemonic: "BIT  7,(IX+$1)", args: []int{2}, size: 4},
	0x7D: {mnemonic: "BIT  7,(IX+$1)", args: []int{2}, size: 4},
	0x7E: {mnemonic: "BIT  7,(IX+$1)", args: []int{2}, size: 4},
	0x7F: {mnemonic: "BIT  7,(IX+$1)", args: []int{2}, size: 4},
	0x80: {mnemonic: "RES  0,(IX+$1),B", args: []int{2}, size: 4},
	0x81: {mnemonic: "RES  0,(IX+$1),C", args: []int{2}, size: 4},
	0x82: {mnemonic: "RES  0,(IX+$1),D", args: []int{2}, size: 4},
	0x83: {mnemonic: "RES  0,(IX+$1),E", args: []int{2}, size: 4},
	0x84: {mnemonic: "RES  0,(IX+$1),H", args: []int{2}, size: 4},
	0x85: {mnemonic: "RES  0,(IX+$1),L", args: []int{2}, size: 4},
	0x86: {mnemonic: "RES  0,(IX+$1)", args: []int{2}, size: 4},
	0x87: {mnemonic: "RES  0,(IX+$1),A", args: []int{2}, size: 4},
	0x88: {mnemonic: "RES  1,(IX+$1),B", args: []int{2}, size: 4},
	0x89: {mnemonic: "RES  1,(IX+$1),C", args: []int{2}, size: 4},
	0x8A: {mnemonic: "RES  1,(IX+$1),D", args: []int{2}, size: 4},
	0x8B: {mnemonic: "RES  1,(IX+$1),E", args: []int{2}, size: 4},
	0x8C: {mnemonic: "RES  1,(IX+$1),H", args: []int{2}, size: 4},
	0x8D: {mnemonic: "RES  1,(IX+$1),L", args: []int{2}, size: 4},
	0x8E: {mnemonic: "RES  1,(IX+$1)", args: []int{2}, size: 4},
	0x8F: {mnemonic: "RES  1,(IX+$1),A", args: []int{2}, size: 4},
	0x90: {mnemonic: "RES  2,(IX+$1),B", args: []int{2}, size: 4},
	0x91: {mnemonic: "RES  2,(IX+$1),C", args: []int{2}, size: 4},
	0x92: {mnemonic: "RES  2,(IX+$1),D", args: []int{2}, size: 4},
	0x93: {mnemonic: "RES  2,(IX+$1),E", args: []int{2}, size: 4},
	0x94: {mnemonic: "RES  2,(IX+$1),H", args: []int{2}, size: 4},
	0x95: {mnemonic: "RES  2,(IX+$1),L", args: []int{2}, size: 4},
	0x96: {mnemonic: "RES  2,(IX+$1)", args: []int{2}, size: 4},
	0x97: {mnemonic: "RES  2,(IX+$1),A", args: []int{2}, size: 4},
	0x98: {mnemonic: "RES  3,(IX+$1),B", args: []int{2}, size: 4},
	0x99: {mnemonic: "RES  3,(IX+$1),C", args: []int{2}, size: 4},
	0x9A: {mnemonic: "RES  3,(IX+$1),D", args: []int{2}, size: 4},
	0x9B: {mnemonic: "RES  3,(IX+$1),E", args: []int{2}, size: 4},
	0x9C: {mnemonic: "RES  3,(IX+$1),H", args: []int{2}, size: 4},
	0x9D: {mnemonic: "RES  3,(IX+$1),L", args: []int{2}, size: 4},
	0x9E: {mnemonic: "RES  3,(IX+$1)", args: []int{2}, size: 4},
	0x9F: {mnemonic: "RES  3,(IX+$1),A", args: []int{2}, size: 4},
	0xA0: {mnemonic: "RES  4,(IX+$1),B", args: []int{2}, size: 4},
	0xA1: {mnemonic: "RES  4,(IX+$1),C", args: []int{2}, size: 4},
	0xA2: {mnemonic: "RES  4,(IX+$1),D", args: []int{2}, size: 4},
	0xA3: {mnemonic: "RES  4,(IX+$1),E", args: []int{2}, size: 4},
	0xA4: {mnemonic: "RES  4,(IX+$1),H", args: []int{2}, size: 4},
	0xA5: {mnemonic: "RES  4,(IX+$1),L", args: []int{2}, size: 4},
	0xA6: {mnemonic: "RES  4,(IX+$1)", args: []int{2}, size: 4},
	0xA7: {mnemonic: "RES  4,(IX+$1),A", args: []int{2}, size: 4},
	0xA8: {mnemonic: "RES  5,(IX+$1),B", args: []int{2}, size: 4},
	0xA9: {mnemonic: "RES  5,(IX+$1),C", args: []int{2}, size: 4},
	0xAA: {mnemonic: "RES  5,(IX+$1),D", args: []int{2}, size: 4},
	0xAB: {mnemonic: "RES  5,(IX+$1),E", args: []int{2}, size: 4},
	0xAC: {mnemonic: "RES  5,(IX+$1),H", args: []int{2}, size: 4},
	0xAD: {mnemonic: "RES  5,(IX+$1),L", args: []int{2}, size: 4},
	0xAE: {mnemonic: "RES  5,(IX+$1)", args: []int{2}, size: 4},
	0xAF: {mnemonic: "RES  5,(IX+$1),A", args: []int{2}, size: 4},
	0xB0: {mnemonic: "RES  6,(IX+$1),B", args: []int{2}, size: 4},
	0xB1: {mnemonic: "RES  6,(IX+$1),C", args: []int{2}, size: 4},
	0xB2: {mnemonic: "RES  6,(IX+$1),D", args: []int{2}, size: 4},
	0xB3: {mnemonic: "RES  6,(IX+$1),E", args: []int{2}, size: 4},
	0xB4: {mnemonic: "RES  6,(IX+$1),H", args: []int{2}, size: 4},
	0xB5: {mnemonic: "RES  6,(IX+$1),L", args: []int{2}, size: 4},
	0xB6: {mnemonic: "RES  6,(IX+$1)", args: []int{2}, size: 4},
	0xB7: {mnemonic: "RES  6,(IX+$1),A", args: []int{2}, size: 4},
	0xB8: {mnemonic: "RES  7,(IX+$1),B", args: []int{2}, size: 4},
	0xB9: {mnemonic: "RES  7,(IX+$1),C", args: []int{2}, size: 4},
	0xBA: {mnemonic: "RES  7,(IX+$1),D", args: []int{2}, size: 4},
	0xBB: {mnemonic: "RES  7,(IX+$1),E", args: []int{2}, size: 4},
	0xBC: {mnemonic: "RES  7,(IX+$1),H", args: []int{2}, size: 4},
	0xBD: {mnemonic: "RES  7,(IX+$1),L", args: []int{2}, size: 4},
	0xBE: {mnemonic: "RES  7,(IX+$1)", args: []int{2}, size: 4},
	0xBF: {mnemonic: "RES  7,(IX+$1),A", args: []int{2}, size: 4},
	0xC0: {mnemonic: "SET  0,(IX+$1),B", args: []int{2}, size: 4},
	0xC1: {mnemonic: "SET  0,(IX+$1),C", args: []int{2}, size: 4},
	0xC2: {mnemonic: "SET  0,(IX+$1),D", args: []int{2}, size: 4},
	0xC3: {mnemonic: "SET  0,(IX+$1),E", args: []int{2}, size: 4},
	0xC4: {mnemonic: "SET  0,(IX+$1),H", args: []int{2}, size: 4},
	0xC5: {mnemonic: "SET  0,(IX+$1),L", args: []int{2}, size: 4},
	0xC6: {mnemonic: "SET  0,(IX+$1)", args: []int{2}, size: 4},
	0xC7: {mnemonic: "SET  0,(IX+$1),A", args: []int{2}, size: 4},
	0xC8: {mnemonic: "SET  1,(IX+$1),B", args: []int{2}, size: 4},
	0xC9: {mnemonic: "SET  1,(IX+$1),C", args: []int{2}, size: 4},
	0xCA: {mnemonic: "SET  1,(IX+$1),D", args: []int{2}, size: 4},
	0xCB: {mnemonic: "SET  1,(IX+$1),E", args: []int{2}, size: 4},
	0xCC: {mnemonic: "SET  1,(IX+$1),H", args: []int{2}, size: 4},
	0xCD: {mnemonic: "SET  1,(IX+$1),L", args: []int{2}, size: 4},
	0xCE: {mnemonic: "SET  1,(IX+$1)", args: []int{2}, size: 4},
	0xCF: {mnemonic: "SET  1,(IX+$1),A", args: []int{2}, size: 4},
	0xD0: {mnemonic: "SET  2,(IX+$1),B", args: []int{2}, size: 4},
	0xD1: {mnemonic: "SET  2,(IX+$1),C", args: []int{2}, size: 4},
	0xD2: {mnemonic: "SET  2,(IX+$1),D", args: []int{2}, size: 4},
	0xD3: {mnemonic: "SET  2,(IX+$1),E", args: []int{2}, size: 4},
	0xD4: {mnemonic: "SET  2,(IX+$1),H", args: []int{2}, size: 4},
	0xD5: {mnemonic: "SET  2,(IX+$1),L", args: []int{2}, size: 4},
	0xD6: {mnemonic: "SET  2,(IX+$1)", args: []int{2}, size: 4},
	0xD7: {mnemonic: "SET  2,(IX+$1),A", args: []int{2}, size: 4},
	0xD8: {mnemonic: "SET  3,(IX+$1),B", args: []int{2}, size: 4},
	0xD9: {mnemonic: "SET  3,(IX+$1),C", args: []int{2}, size: 4},
	0xDA: {mnemonic: "SET  3,(IX+$1),D", args: []int{2}, size: 4},
	0xDB: {mnemonic: "SET  3,(IX+$1),E", args: []int{2}, size: 4},
	0xDC: {mnemonic: "SET  3,(IX+$1),H", args: []int{2}, size: 4},
	0xDD: {mnemonic: "SET  3,(IX+$1),L", args: []int{2}, size: 4},
	0xDE: {mnemonic: "SET  3,(IX+$1)", args: []int{2}, size: 4},
	0xDF: {mnemonic: "SET  3,(IX+$1),A", args: []int{2}, size: 4},
	0xE0: {mnemonic: "SET  4,(IX+$1),B", args: []int{2}, size: 4},
	0xE1: {mnemonic: "SET  4,(IX+$1),C", args: []int{2}, size: 4},
	0xE2: {mnemonic: "SET  4,(IX+$1),D", args: []int{2}, size: 4},
	0xE3: {mnemonic: "SET  4,(IX+$1),E", args: []int{2}, size: 4},
	0xE4: {mnemonic: "SET  4,(IX+$1),H", args: []int{2}, size: 4},
	0xE5: {mnemonic: "SET  4,(IX+$1),L", args: []int{2}, size: 4},
	0xE6: {mnemonic: "SET  4(IX+$1)", args: []int{2}, size: 4},
	0xE7: {mnemonic: "SET  4,(IX+$1),A", args: []int{2}, size: 4},
	0xE8: {mnemonic: "SET  5,(IX+$1),B", args: []int{2}, size: 4},
	0xE9: {mnemonic: "SET  5,(IX+$1),C", args: []int{2}, size: 4},
	0xEA: {mnemonic: "SET  5,(IX+$1),D", args: []int{2}, size: 4},
	0xEB: {mnemonic: "SET  5,(IX+$1),E", args: []int{2}, size: 4},
	0xEC: {mnemonic: "SET  5,(IX+$1),H", args: []int{2}, size: 4},
	0xED: {mnemonic: "SET  5,(IX+$1),L", args: []int{2}, size: 4},
	0xEE: {mnemonic: "SET  5,(IX+$1)", args: []int{2}, size: 4},
	0xEF: {mnemonic: "SET  5,(IX+$1),A", args: []int{2}, size: 4},
	0xF0: {mnemonic: "SET  6,(IX+$1),B", args: []int{2}, size: 4},
	0xF1: {mnemonic: "SET  6,(IX+$1),C", args: []int{2}, size: 4},
	0xF2: {mnemonic: "SET  6,(IX+$1),D", args: []int{2}, size: 4},
	0xF3: {mnemonic: "SET  6,(IX+$1),E", args: []int{2}, size: 4},
	0xF4: {mnemonic: "SET  6,(IX+$1),H", args: []int{2}, size: 4},
	0xF5: {mnemonic: "SET  6,(IX+$1),L", args: []int{2}, size: 4},
	0xF6: {mnemonic: "SET  6,(IX+$1)", args: []int{2}, size: 4},
	0xF7: {mnemonic: "SET  6,(IX+$1),A", args: []int{2}, size: 4},
	0xF8: {mnemonic: "SET  7,(IX+$1),B", args: []int{2}, size: 4},
	0xF9: {mnemonic: "SET  7,(IX+$1),C", args: []int{2}, size: 4},
	0xFA: {mnemonic: "SET  7,(IX+$1),D", args: []int{2}, size: 4},
	0xFB: {mnemonic: "SET  7,(IX+$1),E", args: []int{2}, size: 4},
	0xFC: {mnemonic: "SET  7,(IX+$1),H", args: []int{2}, size: 4},
	0xFD: {mnemonic: "SET  7,(IX+$1),L", args: []int{2}, size: 4},
	0xFE: {mnemonic: "SET  7,(IX+$1)", args: []int{2}, size: 4},
	0xFF: {mnemonic: "SET  7,(IX+$1),A", args: []int{2}, size: 4},
}
